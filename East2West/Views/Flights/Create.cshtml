@model East2West.Models.Flight

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm("Create", "Flights", FormMethod.Post, new { id = "flight-create" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <button id="upload_widget" class="cloudinary-button">Upload images</button>
            <div id="upload_button_holder" style="display:flex;flex-wrap:wrap;">
            </div>
            <input type="hidden" class="form-control"
                   placeholder="Upload thumbnail!"
                   name="Thumbnail" , id="Thumbnail">
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsRoundTicket, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsRoundTicket)
                @Html.ValidationMessageFor(model => model.IsRoundTicket, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DepartureId, "DepartureId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DepartureId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DepartureId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DestinationId, "DestinationId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DestinationId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DestinationId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DepartureAt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.DepartureAt, new { @type = "date", @class = "form-control datepicker" })
            @Html.ValidationMessageFor(model => model.DepartureAt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReturnAt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ReturnAt, new { @type = "date", @class = "form-control datepicker" })
            @Html.ValidationMessageFor(model => model.ReturnAt, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 3 })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Detail, new { @class = "form-control", @rows = 10 })
            @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/admin_vendor/js/bootstrap-wizard/bootstrap.wizard.min.js"></script>
    <script src="~/Content/admin_js/components/wizard/form-wizard.min.js"></script>
    <script src="https://upload-widget.cloudinary.com/global/all.js" type="text/javascript"></script>
    <script type="text/javascript">
        var i = 0;
        var myWidget = cloudinary.createUploadWidget({
            cloudName: 'nmq126',
            uploadPreset: 'jkyvknsj'
        }, function (error, result) {
            if (!error && result && result.event === "success") {
                document.forms['flight-create']['Thumbnail'].value += result.info.secure_url + ',';
                console.log('Done! Here is the image info: ', result.info);
                var imgTag = document.getElementById('upload_button_holder');
                imgTag.innerHTML +=
                    `<div class="p-2" style="position: relative">
                                                <button id="button_${i}" class="cls_btn" data-token="${result.info.delete_token}" data-url="${result.info.secure_url}" type="button" style="position: absolute; right: 0px"><span>x</span></button>
                                                <img style="height: 150px" src="${result.info.secure_url}" alt="" class="img-thumbnail mr-2">
                                            </div>`;

                var doButtonPress = function (id, delete_token, secure_url) {
                    deleteByToken('nmq126', delete_token);//xoa anh tren cloudinary
                    $("#" + id).parent().remove();//xoa div
                    //sua lai value thumbnail
                    var array_thumbnail = document.forms['flight-create']['Thumbnail'].value.split(',');
                    array_thumbnail.pop();
                    var new_array_thumbnail = array_thumbnail.filter(item => item != secure_url);
                    if (new_array_thumbnail.length > 0) {
                        document.forms['flight-create']['Thumbnail'].value = new_array_thumbnail.join(',') + ',';
                    } else {
                        document.forms['flight-create']['Thumbnail'].value = "";
                    }
                }

                $('.cls_btn').click(function () {
                    doButtonPress(this.id, this.getAttribute('data-token'), this.getAttribute('data-url'));
                });
                i += 1;
            }
        })

        document.getElementById("upload_widget").addEventListener("click", function () {
            myWidget.open();
        }, false);

        function deleteByToken(cloud_name, token) {
            $.ajax({
                url: "https://api.cloudinary.com/v1_1/" + cloud_name + "/delete_by_token",
                method: 'POST',
                data: {
                    token: token
                },
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                } //default là xmlhttprequest
            }).done(function (data) {
                console.log("dc ban");
            }).fail(function (data) {
                console.log("ko dc ban");
            })
        }
    </script>

    <script src="https://cdn.ckeditor.com/4.17.1/standard-all/ckeditor.js"></script>
    <script>
        CKEDITOR.replace("Detail");
    </script>
}