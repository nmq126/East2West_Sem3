@model PagedList.IPagedList<East2West.Models.CarSchedule>
@using PagedList.Mvc;

@{
    ViewBag.Title = "List car schedule";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .pagination-container {
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .pagination-container ul {
            list-style-type: none;
            margin: 0;
            padding: 0;
            overflow: hidden; /*background-color: #333;*/
        }

        .pagination-container li {
            float: left;
            border-right: 1px solid #bbb;
        }

            .pagination-container li:last-child {
                border-right: none;
            }

            .pagination-container li a {
                display: block;
                color: Black;
                text-align: center;
                padding: 8px 10px;
                text-decoration: none;
            }

                .pagination-container li a:hover:not(.active) {
                    background-color: white;
                }

        .pagination-container .active {
            background-color: white;
        }
</style>

<div class="row">

    <div class="col-xl-12">
        <div class="widget has-shadow">
            <div class="widget-body">
                @*@using (Html.BeginForm("Index", "TourDetails", FormMethod.Get))
                    {
                        <div class="row">
                            <div class="col-lg-3">
                                <label class="form-control-label">Select Tour</label>
                                <div class="select mb-3">
                                    <select name="tourId" id="tourId" class="custom-select form-control">
                                        <option value="">Select Departure</option>
                                        @foreach (var tour in ViewBag.TourList)
                                        {
                                            if (tour.Id == ViewBag.TourId)
                                            {
                                                <option value=@tour.Id selected>@tour.Name</option>
                                            }
                                            else
                                            {
                                                <option value=@tour.Id>@tour.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <label class="form-control-label">Select Destination location</label>
                                <div class="select mb-3">
                                    <select name="destinationId" id="destinationId" class="custom-select form-control">
                                        <option value="">Select Destination</option>
                                        @foreach (var destination in ViewBag.LocationList)
                                        {
                                            if (destination.Id == ViewBag.DestinationId)
                                            {
                                                <option value=@destination.Id selected>@destination.Name</option>
                                            }
                                            else
                                            {
                                                <option value=@destination.Id>@destination.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="col-lg-3">
                                <label class="form-control-label">Sort by</label>
                                <div class="select mb-3">
                                    <select name="sortType" id="sortType" class="custom-select form-control">
                                        <option value="">Sort by (Lastest default)</option>
                                        <option value="createdAt_asc" @(ViewBag.SortType == "createdAt_asc" ? "selected" : "")>Latest</option>
                                        <option value="createdAt_desc" @(ViewBag.SortType == "createdAt_desc" ? "selected" : "")>Oldest</option>
                                        <option value="duration_asc" @(ViewBag.SortType == "duration_asc" ? "selected" : "")>Duration (Increase)</option>
                                        <option value="duration_desc" @(ViewBag.SortType == "duration_desc" ? "selected" : "")>Duration (Decrease)</option>
                                        <option value="rating_asc" @(ViewBag.SortType == "rating_asc" ? "selected" : "")>Rating (Increase)</option>
                                        <option value="rating_desc" @(ViewBag.SortType == "rating_desc" ? "selected" : "")>Rating (Decrease)</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <label class="form-control-label">Status</label>
                                <div class="select mb-3">
                                    <select name="status" id="status" class="custom-select form-control">
                                        <option value="2" @(ViewBag.Status == 2 ? "selected" : "")>All</option>
                                        <option value="1" @(ViewBag.Status == 1 ? "selected" : "")>Active</option>
                                        <option value="0" @(ViewBag.Status == 0 ? "selected" : "")>Disable</option>

                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3">
                                <label class="form-control-label">Duration</label>
                                <div class="select mb-3">
                                    <select name="duration_range" id="duration_range" class="custom-select form-control">
                                        <option value="all" @(ViewBag.DurationRange == "all" ? "selected" : "")>All</option>
                                        <option value="lte3" @(ViewBag.DurationRange == "lte3" ? "selected" : "")><= 3 days</option>
                                        <option value="4to7" @(ViewBag.DurationRange == "4to7" ? "selected" : "")>4 - 7 days</option>
                                        <option value="gt7" @(ViewBag.DurationRange == "gt7" ? "selected" : "")>> 7 days</option>

                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <label class="form-control-label">Search by Id</label>
                                <div class="">
                                    @Html.TextBox("id", ViewBag.Id as string, new { @class = "form-control", placeholder = "Find by id" })
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <label class="form-control-label">Search by keyword</label>
                                <div class="">
                                    @Html.TextBox("keyword", ViewBag.Keyword as string, new { @class = "form-control", placeholder = "Name/Description/Detail/Teacher" })
                                </div>
                            </div>
                            <div class="col-lg-3 text-right">
                                <div style="height:28px"></div>
                                <div>
                                    <button type="submit" class="btn btn-primary mr-1 mb-2">Search</button>
                                    <button type="reset" class="btn btn btn-outline-secondary mr-1 mb-2"><a href="/Tours">Clear</a></button>
                                </div>

                            </div>
                        </div>
                    }*@


            </div>
        </div>
        <!-- Default -->
        <div class="widget has-shadow">
            @if (Model != null && Model.Count() > 0)
            {
                <div class="widget-header bordered d-flex align-items-center">
                    <div class="styled-checkbox mt-2">
                        <input type="checkbox" name="check-all" id="check-all">
                        <label for="check-all">Select all</label>
                    </div>
                    <div class="col-4">
                        <select id="checkboxStatus" name="checkboxStatus" class="custom-select form-control" onchange="changeByCheckbox(this)">
                            <option>Change selected item status</option>
                            <option value="1">Active</option>
                            <option value="0">Disable</option>
                        </select>
                    </div>
                </div>
            }
            <div class="widget-body">
                <div class="table-responsive">
                    <table class="table table-bordered mb-0">
                        <thead>
                            <tr>
                                <th width="5%"></th>
                                <th width="5%">#</th>
                                <th width="5%">Id</th>
                                <th width="5%">Car Id</th>
                                <th width="10%">Car Model</th>
                                <th width="10%">Car Type</th>
                                <th width="10%">License plate</th>
                                <th width="10%">Start Day</th>
                                <th width="10%">End Day</th>
                                <th width="10%">Created At</th>
                                <th width="10%">Status</th>
                                <th width="10%">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{var i = 1;
                                foreach (var item in Model)
                                {
                                    string cbId = "cb" + i;
                                    var prevStatus = item.Status;
                                    <tr>
                                        <td>
                                            <div class="styled-checkbox mt-2">
                                                <input type="checkbox" name=@cbId id=@cbId value="@(item.Id)">
                                                <label for=@cbId></label>
                                            </div>
                                         </td>
                                        <td><span class="text-primary">@i</span></td>
                                        <td><span>@item.Id</span></td>
                                        <td>@Html.ActionLink(@item.CarId, "Details", "Cars", new { id = @item.CarId }, null)</td>
                                        <td>@item.Car.CarModel.Name</td>
                                        <td>@item.Car.CarType.Name</td>
                                        <td>@item.Car.LisencePlate</td>
                                        <td>@item.StartDay.ToShortDateString()</td>
                                        <td>@item.EndDay.ToShortDateString()</td>
                                        <td>@item.CreatedAt.ToString("HH:mm:ss dd/M/yyyy")</td>
                                        <td>
                                            <select name="Status" id=@(item.Id) data-id="@(item.Id)" class="custom-select form-control" onchange="changeStatus(this, @prevStatus)">
                                                <option value="3" @(item.Status == 3 ? "selected" : "")>Dropped off</option>
                                                <option value="2" @(item.Status == 2 ? "selected" : "")>Picked up</option>
                                                <option value="1" @(item.Status == 1 ? "selected" : "")>Paid</option>
                                                <option value="0" @(item.Status == 0 ? "selected" : "")>Pending</option>
                                                <option value="-1" @(item.Status == -1 ? "selected" : "")>Refunded</option>
                                            </select>
                                        </td>
                                        <td class="td-actions">
                                            <a href="@Url.Action("Details", "CarSchedules", new { id = item.Id })">
                                                <i class="la la-info-circle" data-toggle="tooltip" title="Information"></i>
                                            </a>
                                            <a href="@Url.Action("Edit", "CarSchedules", new { id = item.Id })">
                                                <i class="la la-edit" data-toggle="tooltip" title="Edit"></i>
                                            </a>
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                        </tbody>
                    </table>
                    @Html.PagedListPager(Model, page => Url.Action("Index",
                                new { page }),
                                new PagedListRenderOptions
                                {
                                    DisplayItemSliceAndTotal = true,
                                    ItemSliceAndTotalFormat = "Showing {0} to {1} of {2} total item(s).",
                                    DisplayLinkToIndividualPages = true,
                                    DisplayPageCountAndCurrentLocation = false,
                                    MaximumPageNumbersToDisplay = 10,
                                    LinkToFirstPageFormat = "««",
                                    LinkToPreviousPageFormat = "«",
                                    LinkToIndividualPageFormat = "{0}",
                                    LinkToNextPageFormat = "»",
                                    LinkToLastPageFormat = "»»",
                                    ContainerDivClasses = new string[] { "pagination-container mt-3" },
                                    UlElementClasses = new string[] { "pagination" },
                                    LiElementClasses = new string[] { "page-item" }
                                })
                </div>
            </div>
        </div>
        <!-- End Default -->
    </div>
</div>

@section Scripts{
    <script src="~/Content/admin_vendor/js/bootstrap-select/bootstrap-select.min.js"></script>
    <script>
        $("#check-all").change(function () {
            $("input:checkbox").prop('checked', $(this).prop("checked"));
        });
        function changeByCheckbox(obj) {
            var ids = "";
            $("input:checkbox[name!=check-all]:checked").each(function () {
                ids == "" ? ids += $(this).val() : ids += "," + $(this).val()
            });
            var statusString = ""
            var status = obj.value
            switch (status) {
                case "3":
                    statusString = "Dropped off"
                    break;
                case "2":
                    statusString = "Picked up"
                    break;
                case "1":
                    statusString = "Paid"
                    break;
                case "0":
                    statusString = "Pending"
                    break;
                case "-1":
                    statusString = "Refunded"
                    break;
                default:
                    break;
            }
            Swal.fire({
                title: 'Are you sure?',
                text: "To change selected item" + id + " status to " + statusString,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, do it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $("#preloader2").show();
                    $.ajax({
                        type: "GET",
                        url: "/CarSchedules/ChangeStatus",
                        data: {
                            status: status,
                            ids: ids
                        },
                        success: function (msg) {
                            $("#preloader2").hide();
                            Swal.fire({
                                title: 'Success!',
                                text: msg,
                                timer: 2000,
                                icon: "success"
                            }).then(function () {
                                location.reload()
                            });
                        },
                        error: function () {
                            $("#preloader2").hide();
                        },
                    });

                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    var a = document.getElementById("checkboxStatus");
                    a.options[0].selected = true;
                }
            })
        }
        function changeStatus(obj, prevStatus) {
            var id = obj.getAttribute('data-id')
            var status = obj.value
            console.log(prevStatus)
            var statusString = ""
            switch (status) {
                case "3":
                    statusString = "Dropped off"
                    break;
                case "2":
                    statusString = "Picked up"
                    break;
                case "1":
                    statusString = "Paid"
                    break;
                case "0":
                    statusString = "Pending"
                    break;
                case "-1":
                    statusString = "Refunded"
                    break;
                default:
                    break;
            }
            Swal.fire({
                title: 'Are you sure?',
                text: "To change car schedule #" + id + " status to " + statusString,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, do it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $("#preloader2").show();
                    $.ajax({
                        type: "GET",
                        url: "/CarSchedules/ChangeStatus",
                        data: {
                            ids: id,
                            status: status
                        },
                        success: function (msg) {
                            $("#preloader2").hide();
                            Swal.fire(
                                'Success!',
                                msg,
                                'success'
                            )
                        },
                        error: function () {
                            $("#preloader2").hide();
                        },
                    });

                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    var a = document.getElementById(id);
                    switch (prevStatus) {
                        case 3:
                            obj.options[0].selected = true;
                            break;
                        case 2:
                            obj.options[1].selected = true;
                            break;
                        case 1:
                            obj.options[2].selected = true;
                            break;
                        case 0:
                            obj.options[3].selected = true;
                            break;
                        case -1:
                            obj.options[4].selected = true;
                            break;
                        default:
                            break;
                    }
                }
            })
        }
    </script>
}